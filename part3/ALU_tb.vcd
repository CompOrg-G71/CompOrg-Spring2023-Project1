$date
	Tue Apr 11 05:17:22 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ALU_tb $end
$var wire 8 ! OutALU_tb [7:0] $end
$var wire 4 " Flags_tb [3:0] $end
$var reg 8 # A_tb [7:0] $end
$var reg 8 $ B_tb [7:0] $end
$var reg 4 % FunSel_tb [3:0] $end
$var reg 1 & clk_tb $end
$scope module ALU_inst $end
$var wire 8 ' A [7:0] $end
$var wire 8 ( B [7:0] $end
$var wire 4 ) FunSel [3:0] $end
$var wire 1 & clk $end
$var reg 8 * B_neg [7:0] $end
$var reg 4 + Flags [3:0] $end
$var reg 8 , OutALU [7:0] $end
$var reg 9 - temp_result [8:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx -
bx ,
bx +
bx *
b0 )
b0 (
b1 '
0&
b0 %
b0 $
b1 #
bx "
bx !
$end
#5000
bx0x0 "
bx0x0 +
b1 !
b1 ,
b0 *
1&
#10000
0&
b100 %
b100 )
b1111 $
b1111 (
b110011 #
b110011 '
#15000
b0 "
b0 +
b1000010 !
b1000010 ,
b1000010 -
b11110001 *
1&
#20000
0&
b101 %
b101 )
b11111010 $
b11111010 (
b111 #
b111 '
#25000
b1010 "
b1010 +
b1101 !
b1101 ,
b1101 -
b110 *
1&
#30000
0&
b110 %
b110 )
b111000 $
b111000 (
b1000000 #
b1000000 '
#35000
b0 "
b0 +
b1000000 !
b1000000 ,
b11001000 *
1&
#40000
0&
b111 %
b111 )
b11110000 $
b11110000 (
b10101010 #
b10101010 '
#45000
b10100000 !
b10100000 ,
b10000 *
1&
#50000
0&
b1000 %
b1000 )
#55000
b100 "
b100 +
b11111010 !
b11111010 ,
1&
#60000
0&
b1010 %
b1010 )
#65000
b1011010 !
b1011010 ,
1&
#70000
0&
b1011 %
b1011 )
b0 $
b0 (
b110011 #
b110011 '
#75000
b0 "
b0 +
b1100110 !
b1100110 ,
b0 *
1&
#80000
0&
b1100 %
b1100 )
#85000
b10 "
b10 +
b11001 !
b11001 ,
1&
#90000
0&
b1101 %
b1101 )
b10000000 #
b10000000 '
#95000
b1010 "
b1010 +
b0 !
b0 ,
1&
#100000
0&
b1110 %
b1110 )
b110011 #
b110011 '
#105000
b1011 "
b1011 +
b11001 !
b11001 ,
1&
#110000
0&
b1111 %
b1111 )
b10000000 #
b10000000 '
#115000
b1000 "
b1000 +
b1000000 !
b1000000 ,
1&
#120000
0&
