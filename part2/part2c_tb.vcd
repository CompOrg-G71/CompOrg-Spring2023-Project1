$date
	Tue Apr 11 17:49:21 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module part2c_tb $end
$var wire 8 ! OutB [7:0] $end
$var wire 8 " OutA [7:0] $end
$var reg 2 # FunSel [1:0] $end
$var reg 8 $ I [7:0] $end
$var reg 2 % OutASel [1:0] $end
$var reg 2 & OutBSel [1:0] $end
$var reg 4 ' RSel [3:0] $end
$var reg 1 ( clk $end
$scope module part2c_ARF $end
$var wire 2 ) FunSel [1:0] $end
$var wire 8 * I [7:0] $end
$var wire 2 + OutASel [1:0] $end
$var wire 2 , OutBSel [1:0] $end
$var wire 4 - RSel [3:0] $end
$var wire 1 ( clk $end
$var reg 8 . AR [7:0] $end
$var reg 8 / OutA [7:0] $end
$var reg 8 0 OutB [7:0] $end
$var reg 8 1 PC [7:0] $end
$var reg 8 2 PCPast [7:0] $end
$var reg 8 3 SP [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 3
bx 2
bx 1
bx 0
bx /
bx .
b1111 -
b0 ,
b0 +
b1000 *
b0 )
0(
b1111 '
b0 &
b0 %
b1000 $
b0 #
bx "
bx !
$end
#5
b0 2
b0 3
b0 .
b0 1
1(
#10
0(
#15
b0 !
b0 0
b0 "
b0 /
b1000 2
b1000 1
1(
b11 &
b11 ,
b10 %
b10 +
b1001 '
b1001 -
b1 #
b1 )
#20
0(
#25
b1000 !
b1000 0
b1000 "
b1000 /
1(
#30
0(
b10 #
b10 )
b11000 $
b11000 *
#35
b1001 2
b1001 1
1(
#40
0(
#45
b1001 !
b1001 0
b1001 "
b1001 /
b1000 2
b1000 1
1(
b11 #
b11 )
#50
0(
#55
b1000 !
b1000 0
b1000 "
b1000 /
b111 2
b111 1
1(
#60
0(
b1 &
b1 ,
b0 %
b0 +
b110 '
b110 -
b1 #
b1 )
#65
b0 !
b0 0
b0 "
b0 /
b11000 3
b11000 .
1(
#70
0(
#75
b11000 !
b11000 0
b11000 "
b11000 /
b0 3
b0 .
1(
b0 #
b0 )
#80
0(
#85
b0 !
b0 0
b0 "
b0 /
1(
#90
0(
